# Импорт библиотеки для работы с таблицами
from tabulate import tabulate
import os  # импорт библиотеки для работы с операционной системой

# Настройка пути к файлу для сохранения результатов
# os.environ['USERPROFILE'] содержит информацию о текущем пользователе, соединяем его с 'Desktop' чтобы получить путь к рабочему столу
desktop = os.path.join(os.path.join(os.environ['USERPROFILE']), 'Desktop')
# Создаем имя файла и соединяем его с путем к рабочему столу
filename = os.path.join(desktop, "output.txt")

# Выводим ASCII графику
merchant_ascii = """
 ▄█     █▄     ▄████████  ▄█        ▄████████  ▄██████▄    ▄▄▄▄███▄▄▄▄      ▄████████                   
███     ███   ███    ███ ███       ███    ███ ███    ███ ▄██▀▀▀███▀▀▀██▄   ███    ███                   
███     ███   ███    █▀  ███       ███    █▀  ███    ███ ███   ███   ███   ███    █▀                    
███     ███  ▄███▄▄▄     ███       ███        ███    ███ ███   ███   ███  ▄███▄▄▄                       
███     ███ ▀▀███▀▀▀     ███       ███        ███    ███ ███   ███   ███ ▀▀███▀▀▀                       
███     ███   ███    █▄  ███       ███    █▄  ███    ███ ███   ███   ███   ███    █▄                    
███ ▄█▄ ███   ███    ███ ███▌    ▄ ███    ███ ███    ███ ███   ███   ███   ███    ███                   
 ▀███▀███▀    ██████████ █████▄▄██ ████████▀   ▀██████▀   ▀█   ███   █▀    ██████████                   
                         ▀                                                                              
   ▄▄▄▄███▄▄▄▄      ▄████████    ▄████████  ▄████████    ▄█    █▄       ▄████████ ███▄▄▄▄       ███     
 ▄██▀▀▀███▀▀▀██▄   ███    ███   ███    ███ ███    ███   ███    ███     ███    ███ ███▀▀▀██▄ ▀█████████▄ 
 ███   ███   ███   ███    █▀    ███    ███ ███    █▀    ███    ███     ███    ███ ███   ███    ▀███▀▀██ 
 ███   ███   ███  ▄███▄▄▄      ▄███▄▄▄▄██▀ ███         ▄███▄▄▄▄███▄▄   ███    ███ ███   ███     ███   ▀ 
 ███   ███   ███ ▀▀███▀▀▀     ▀▀███▀▀▀▀▀   ███        ▀▀███▀▀▀▀███▀  ▀███████████ ███   ███     ███     
 ███   ███   ███   ███    █▄  ▀███████████ ███    █▄    ███    ███     ███    ███ ███   ███     ███     
 ███   ███   ███   ███    ███   ███    ███ ███    ███   ███    ███     ███    ███ ███   ███     ███     
  ▀█   ███   █▀    ██████████   ███    ███ ████████▀    ███    █▀      ███    █▀   ▀█   █▀     ▄████▀   
                                ███    ███                                                               
"""
print(merchant_ascii)

# Принимаем входные данные
# Считываем сумму закупки, вес единицы товара, стоимость покупки, стоимость заказа на покупку, стоимость продажи, стоимость заказа на продажу
money = float(input("Введите сумму закупки: "))
itemWeight = float(input("Введите вес единицы товара: "))
buy = float(input("Введите стоимость покупки: "))
buyOrder = float(input("Введите стоимость заказа на покупку: "))
sell = float(input("Введите стоимость продажи: "))
sellOrder = float(input("Введите стоимость заказа на продажу: "))

# Константа веса
weight = 3000

# Налоги
# Ставка налога при продаже, при продаже по заказу, при покупке по заказу
tax_sell = 0.08
tax_sellOrder = 0.105
tax_buyOrder = 0.025

# Вычисления
# Вычисляем количество товара, которое мы можем купить или заказать на покупку с учетом доступных средств и веса
quantity_buy = min(money / buy, weight / itemWeight) if buy != 0 else 0
quantity_buyOrder = min(money / buyOrder, weight / itemWeight) if buyOrder != 0 else 0

# Вычисляем общую сумму от продажи или продажи по заказу с учетом налога
total_sell = quantity_buy * sell * (1 - tax_sell)
total_sellOrder = quantity_buyOrder * sellOrder * (1 - tax_sellOrder)

# Вычисляем общую стоимость покупки или покупки по заказу
total_cost_buy = quantity_buy * buy
total_cost_buyOrder = quantity_buyOrder * buyOrder * (1 + tax_buyOrder)

# Вычисляем профит (разница между продажей и покупкой)
profit_buy = total_sell - total_cost_buy
profit_buyOrder = total_sellOrder - total_cost_buyOrder

# Формируем таблицу результатов
data = [
    ["Покупка", round(quantity_buy, 2), round(total_sell, 2), round(total_cost_buy, 2), round(profit_buy, 2)],
    ["Заказ на покупку", round(quantity_buyOrder, 2), round(total_sellOrder, 2), round(total_cost_buyOrder, 2), round(profit_buyOrder, 2)]
]
df = tabulate(data, headers=["Тип сделки", "Кол-во", "Продажа", "Цена", "Профит"], tablefmt="pipe", numalign="right", floatfmt=".2f")

# Записываем результаты в файл
# Открываем файл на запись
with open(filename, "w") as file:
    # Записываем в файл таблицу результатов
    file.write(df)
